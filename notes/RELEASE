= Timeline =

T-8 weeks
  * e-mail lists & package maintainers:
    - announcing timeline for release
    - requesting package maintainers to suggest stable version for platform
    - list open issues for list and committee to resolve
    - solicit new issues

T-6 weeks
  * publish trial version list
  * triage trac list
  * establish open issues (closing call for new ones)

T-4 weeks
  * rc1 of installers

T-2 weeks
  * rc2 of installers
  * last call on open issues w/suggested closings

T-1 weeks
  * rc3 of installers if needed

T0
  * release!


= Process =

 [] Start a NOTES file for the release
  [] archive changelog.markdown to changelog-xxxx.markdown
  [] reset changelog.markdown for new versions

 [] Update package versions
     * Libraries shipped with GHC.
        http://haskell.org/haskellwiki/Libraries_released_with_GHC
        -or-
        from an expanded GHC source package
          find . -name tests -prune -type f -o  -name '*.cabal'
            | xargs grep -i version: | grep -v -i cabal-version

        [] update haskell-platform.cabal

     * External libraries to latest stable version
        * set up to build macos, and run
            make rewrap
        * copy over haskell-platform.cabal to an empty directory
        * remove all the version constraints on non-GHC packages
        * uncomment all the version constraints on the GHC packages
        * set as appropriate:
            DIST=../hp-github/src/macos/dist-i386
        * run
            PATH=$DIST/bin:$PATH cabal instal \
                --only-dependencies --upgrade-dependencies\
                --package-db=$DIST/package.conf.d --dry-run
        * this will solve for a consistent set of versions!

        [] update haskell-platform.cabal

 * check and follow up on changes to visible packages.
 * check unix package builds
    * update configure.ac with version number
    * update required GHC version
    * update README w/GHC version
 * bump version number in .cabal file
 # put up .cabal file

 # check clean room builds
 # check windows installer
 # check mac installer

 - update content on lambda.galois.com
 # push web page with new urls.
 # publish reddit links with CDN.

 * in the future
   * the .cabal file should spec the GHC packages (rather than commented out)
     but these should be under a "manual" flag to allow use with non-HP GHC's

------------------------------------------------------------------------
= Site =

[] Edit info in upper-right of index.html
[] Update release schedule for current and next release on wiki:
   http://trac.haskell.org/haskell-platform/wiki/ReleaseTimetable
[] add a new section to prior.markdown for previously current release
  [] move the download links there
[] on lambda.haskell.org
  [] create /var/www/platform/download/<version>
  [] copy installers there
  [] create md5sum.txt:
    md5sum [hH]* > md5sum.txt
[] update windows.markdown, mac.markdown, and linux.markdown
  [] update the download link
  [] update the number of the release
  [] for linux, update the link to GHC binary download page
[] update the GHC version and info on contents.markdown
[] make the doc
  [] install the platform on a machine
  [] cd /Library/Haskell/doc
  [] tar czvLf ~/hp-doc-<ver>.tgz *
  [] untar that somewhere and clean it up:
    [] find packages -name 'bin' -o -name 'lib' | xargs rm -rf
    [] remove mac stuff from start.html
    [] retar it back up
  [] get that tarball onto lambda
[] update current links on lambda:
  [] /var/www/platform/docs/current
  [] /var/www/platform/download/current


= Locations =

* web site:
  lambda.haskell.org
  /srv/web/haskell.org/platform

* downloads:
  lambda.haskell.org
  /var/www/platform/download/<release>

* on-line doc tree:
  lambda.haskell.org
  /var/www/platform/doc/<release>


= Older Notes =

 * a better format for Change List:
   * clear indications for new / major update / minor update / same / dropped
   * someway to include release notes from the packages themselves
   * more automation for the generation of this information
     (currently too much manual process)
   * historical change lists should be in web site
     (rather than just repo history)

